6/13
1. SideMove 완성해보기
   시간 : 6시까지


6/14
1. 프로빌더를 이용해서 여러 도형 만들어보기
  1.1. 집 모양 만들어보기
  1.2. 나무 만들어보기
  시간 : 5시까지

2. 밟으면 가시가 튀어나오는 함정 만들기
  2.1. 플레이어가 특정 영역안에 들어갔는지를 확인
  2.2. 바닥에서 가시가 튀어나오는 애니메이션 만들기
  시간 : 8시 50분까지


6/15
1. 자동문 만들기
  1.1. 옆으로 열리는 자동문 만들기
  시간 : 6시 20분까지 -> 7시 20분까지


6/17
1. 설문조사 완료하기(https://atentsgameacademy.com/)
   시간 : 3시 50분까지


2. 스위치를 만들어서 스위치를 동작시키면 문이 열리고 닫힌다.
   시간 : 5시 20분까지 -> 6시 20분


6/20
1. 코드 확인하기
  시간 : 7시 50분까지



6/21
1. 특정 두 지점(웨이포인트)을 왕복하는 칼날(물체) 만들기
  1.1. 칼날에 죽을 수 있는 대상이 닿으면 죽는다.
  1.2. 왕복하는 지점을 추가할 수 있도록 코드를 작성해야한다.
  1.3. 애니매이션 사용 금지(스크립트로 제어할 것)
  힌트(4시30분에 힌트 설명)
   - 다음 웨이포인트 방향으로 이동해야 한다. -> 배열(%, 나머지 연산자), 큐
   - 웨이포인트에 도착했는지 알 수 있어야 한다. -> 트리거, 두 지점 사이의 거리가 일정 이하다.
  시간 : 5시 20분까지



 2. 일정범위 안에 플레이어가 들어오면 플레이어를 향해 고개를 돌리고 총알을 발사하는 포탑만들기
   2.1. 플레이어를 향해 고개를 돌릴 때는 즉시 돌아가지 않는다.(한번에 플레이어를 바라보면 안됨)
        - LookAt. Lerp( 결과값 = Quaternion.Lerp(시작값, 도착값, 시간(0~1)); ). (방향백터를 바라보는 회전 = Quaternion.LookRotation(방향백터))
   2.2. 플레이어가 발사각안에 들어와야 포탑은 총알을 발사한다.
        - 발사각 15도일 때. (사이각도 = Vector3.SignedAngle(백터1, 백터2);)
   2.3. 플레이어를 감지하기 위해 트리거를 사용하지 않는다.
        - 플레이어와 포탑의 거리를 구해서 거리가 감지범위의 반지름보다 작다 == 공격 가능한 범위다.
   시간 : 6시 20분까지

  
